import{Kind as e}from"@sinclair/typebox";import t from"lodash.clonedeep";export const toOpenAPIPath=e=>e.split("/").map(e=>e.startsWith(":")?`{${e.slice(1,e.length)}}`:e).join("/");export const mapProperties=(e,t,r)=>{if(void 0===t)return[];if("string"==typeof t){if(t in r)t=r[t];else throw Error(`Can't find model ${t}`)}return Object.entries(t?.properties??[]).map(([r,o])=>({...o,in:e,name:r,type:o?.type,required:t.required?.includes(r)??!1}))};let r=(e,t)=>{let r={};for(let o of e)r[o]={schema:"string"==typeof t?{$ref:`#/components/schemas/${t}`}:{...t}};return r};export const capitalize=e=>e.charAt(0).toUpperCase()+e.slice(1);export const generateOperationId=(e,t)=>{let r=e.toLowerCase();if("/"===t)return r+"Index";for(let e of t.split("/"))123===e.charCodeAt(0)?r+="By"+capitalize(e.slice(1,-1)):r+=capitalize(e);return r};export const registerSchemaPath=({schema:o,contentType:i=["application/json","multipart/form-data","text/plain"],path:n,method:p,hook:s,models:a})=>{s&&(s=t(s)),n=toOpenAPIPath(n);let c="string"==typeof i?[i]:i??["application/json"],l=s?.body,d=s?.params,f=s?.headers,m=s?.query,h=s?.response;if("object"==typeof h){if(e in h){let{type:e,properties:t,required:o,...i}=h;h={200:{...i,description:i.description,content:r(c,"object"===e||"array"===e?{type:e,properties:t,required:o}:h)}}}else Object.entries(h).forEach(([e,t])=>{if("string"==typeof t){let{type:o,properties:i,required:n,...p}=a[t];h[e]={...p,description:p.description,content:r(c,t)}}else{let{type:o,properties:i,required:n,...p}=t;h[e]={...p,description:p.description,content:r(c,{type:o,properties:i,required:n})}}})}else if("string"==typeof h){let{type:e,properties:t,required:o,...i}=a[h];h={200:{...i,content:r(c,h)}}}let y=[...mapProperties("header",f,a),...mapProperties("path",d,a),...mapProperties("query",m,a)];o[n]={...o[n]?o[n]:{},[p.toLowerCase()]:{...f||d||m||l?{parameters:y}:{},...h?{responses:h}:{},operationId:s?.detail?.operationId??generateOperationId(p,n),...s?.detail,...l?{requestBody:{content:r(c,"string"==typeof l?{$ref:`#/components/schemas/${l}`}:l)}}:null}}};